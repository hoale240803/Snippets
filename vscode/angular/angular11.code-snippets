{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Angular Handle Form Template-Driven Approach": {
		"prefix": "ang-handle-form-td",
		"body": [
		  "//put into .ts file ",
		  "			import { NgForm } from '@angular/forms';",
		  "			import { Component, OnInit, ViewChild } from '@angular/core';",
		  "			",
		  "			@Component({",
		  "			  selector: 'app-view-child',",
		  "			  templateUrl: './view-child.component.html',",
		  "			  styleUrls: ['./view-child.component.css']",
		  "			})",
		  "			export class ViewChildComponent implements OnInit {",
		  "			",
		  "			  genders = [",
		  "				{",
		  "				  label: \"Male\",",
		  "				  value: 1",
		  "				},",
		  "				{",
		  "				  label: \"Female\",",
		  "				  value: 0",
		  "				}",
		  "			",
		  "			  ]",
		  "			  @ViewChild(\"formExample\")",
		  "			  signUpForm!: NgForm;",
		  "			  defaultValueDropbox: String = \"teacher\";",
		  "			  textBox: String = \"\"",
		  "			  answerQuestion: String = \"\"",
		  "			  selectedRadioBtn: String = \"\"",
		  "			  isSubmitted: boolean = false;",
		  "			  user = {",
		  "				userName: '',",
		  "				email: '',",
		  "				secretQuestion: '',",
		  "				answer: \"\",",
		  "				gender: \"\"",
		  "			",
		  "			  }",
		  "			  constructor() { }",
		  "			",
		  "			  ngOnInit(): void {",
		  "			  }",
		  "			  onSubmit() {",
		  "				this.isSubmitted = true;",
		  "				console.log(\"form with View-child\", this.signUpForm);",
		  "				this.user.userName = this.signUpForm.value.userName;",
		  "				this.user.email = this.signUpForm.value.email;",
		  "				this.user.secretQuestion = this.signUpForm.value.secret;",
		  "				this.user.gender = this.signUpForm.value.gender.label;",
		  "				this.user.answer = this.signUpForm.value.answer;",
		  "				this.signUpForm.reset();",
		  "			  }",
		  "			",
		  "			}",
		  "			",
		  "			// put into .html file",
		  "			//<!-- handle with ngForm -->",
		  "			",
		  "			<p>handle-form with view-child works!</p>",
		  "			<div class=\"container\">",
		  "			  <div class=\"row\">",
		  "				<div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">",
		  "				  <form (ngSubmit)=\"onSubmit()\" #formExample=\"ngForm\">",
		  "					<!-- INPUT -->",
		  "					<div id=\"user-data\">",
		  "					  <div class=\"form-group\">",
		  "						<label for=\"username\">Username</label>",
		  "						<input",
		  "						  type=\"text\"",
		  "						  id=\"username\"",
		  "						  class=\"form-control\"",
		  "						  ngModel",
		  "						  name=\"userName\"",
		  "						/>",
		  "					  </div>",
		  "					  <button class=\"btn btn-default\" type=\"button\">",
		  "						Suggest an Username",
		  "					  </button>",
		  "					  <div class=\"form-group\">",
		  "						<label for=\"email\">Mail</label>",
		  "						<input",
		  "						  type=\"email\"",
		  "						  id=\"email\"",
		  "						  class=\"form-control\"",
		  "						  ngModel",
		  "						  name=\"email\"",
		  "						  required",
		  "						  email",
		  "						  #email=\"ngModel\"",
		  "						/>",
		  "						<span class=\"bg-danger\" *ngIf=\"!email.valid && email.touched\"",
		  "						  >Please enter valid email!</span",
		  "						>",
		  "					  </div>",
		  "					</div>",
		  "					<!-- COMBOBOX -->",
		  "					<div class=\"form-group\">",
		  "					  <label for=\"secret\">Secret Questions</label>",
		  "					  <select",
		  "						id=\"secret\"",
		  "						class=\"form-control\"",
		  "						[ngModel]=\"defaultValueDropbox\"",
		  "						name=\"secret\"",
		  "					  >",
		  "						<option value=\"pet\">Your first Pet?</option>",
		  "						<option value=\"teacher\">Your first teacher?</option>",
		  "					  </select>",
		  "					</div>",
		  "					<!-- TEXT AREA -->",
		  "					<div class=\"form-group\">",
		  "					  <label for=\"answer\">Your Reply</label>",
		  "					  <textarea",
		  "						class=\"form-control\"",
		  "						[(ngModel)]=\"answerQuestion\"",
		  "						name=\"answer\"",
		  "						id=\"answer\"",
		  "						rows=\"3\"",
		  "					  ></textarea>",
		  "					</div>",
		  "					<!-- RADIO BUTTON -->",
		  "					<div",
		  "					  class=\"btn-group mt-5\"",
		  "					  data-toggle=\"buttons\"",
		  "					  *ngFor=\"let gender of genders\"",
		  "					>",
		  "					  <label class=\"btn btn-primary active\">",
		  "						<input",
		  "						  type=\"radio\"",
		  "						  name=\"gender\"",
		  "						  id=\"gender.value\"",
		  "						  autocomplete=\"off\"",
		  "						  checked",
		  "						  ngModel",
		  "						  [value]=\"gender\"",
		  "						/>",
		  "						{{ gender.label }}",
		  "					  </label>",
		  "					</div>",
		  "					<!-- Btn submit -->",
		  "					<button",
		  "					  class=\"btn btn-primary mt-5\"",
		  "					  [disabled]=\"!formExample.valid\"",
		  "					  type=\"submit\"",
		  "					>",
		  "					  Submit",
		  "					</button>",
		  "				  </form>",
		  "				  <hr />",
		  "				  <div class=\"row\" *ngIf=\"isSubmitted\">",
		  "					<h3>Your data</h3>",
		  "					<p>UserName: {{ user.userName }}</p>",
		  "					<p>Email:{{ user.email }}</p>",
		  "					<p>Secret Question: {{ user.secretQuestion }}</p>",
		  "					<p>Answer:{{ user.answer }}</p>",
		  "					<p>Gender:{{ user.gender }}</p>",
		  "				  </div>",
		  "				</div>",
		  "			  </div>",
		  "			</div>"
		],
		"description": "Angular Handle Form Template-Driven"
	  },

	"Angular Handle Form Reactive Approach ": {
		"scope": "javascript,typescript,html,css",
		"prefix": "ang-handle-form",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Angular handle form"
	},
	"Angular Handle Form2": {
		"scope": "javascript,typescript,html,css",
		"prefix": "ang-handle-form",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Angular handle form"
	}
}